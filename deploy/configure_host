#!/bin/bash
#
# *** Project-A deployment
#
# configure_host
# This script is executed on all hosts, after unpacking release tarball.
#
# If application needs any commands to be executed before activating release, it should be put here
# Examples: generate orm files, compile sass, setup java applications inside Tomcat
#

FILEPATH=`pwd`/$0; BASEDIR=`dirname $FILEPATH`; source $BASEDIR/vars; source $BASEDIR/functions
outfile=`mktemp /tmp/deploy-XXXXXX`

### Tomcat - deploy WAR files, restart tomcat if there are any new appps
if is_default_store; then
  cd $shared_dir/tomcat/webapps

  # SOLR - not on reporting host, if is not admin host at the same time
  if (is_dwh_host && ! is_admin_host); then
    echo solr - not installing here, on DWH machine
  else
    [ ! -d solr ] && restart_tomcat=1
    rm -f solr.war
    ln -s $destination_release_dir/vendor/project-a/infrastructure-package/bin/solr.war .
  fi

  # Jenkins
  [ ! -d jenkins ] && restart_tomcat=1
  rm -f jenkins.war
  ln -s $destination_release_dir/vendor/project-a/infrastructure-package/bin/jenkins.war .


  # Restart tomcat?
  if [ "$restart_tomcat" == "1" ]; then
    echo "New java applications have been deployed - restarting Tomcat..."
    /etc/init.d/tomcat?-${environment} restart
    sleep 10s # Let's give tomcat some time to warm-up...
  fi
fi

### Solr Update: Create Solr cores
if is_default_store; then
  ## Solr Init: Create Solr configfiles (solr.xml)
  cd $destination_release_dir
  php -d "newrelic.appname='Deploy($environment)'" cli/index.php --module=solr --controller=cronjob --action=init &> $outfile
  cat $outfile
  if [ `grep -ci "restart solr now" $outfile` -gt 0 ]; then
    echo " solr/setup/init requested tomcat restart..."
    /etc/init.d/tomcat?-${environment} restart
    sleep 10s # Let's give tomcat some time to warm-up...
  fi

  cd $destination_release_dir
  php -d "newrelic.appname='Deploy($environment)'" cli/index.php --module=solr --controller=cronjob --action=update
fi

### Link public assets to shared static static (for relative URLs in minified stylesheets)
if is_default_store; then
  cd $destination_release_dir/data/static
  for DIR in styles scripts images; do
    [ ! -e $DIR ] && ln -sf $destination_current_dir/static/public/Yves/$DIR $DIR
  done
fi

rm -f $outfile
exit 0
