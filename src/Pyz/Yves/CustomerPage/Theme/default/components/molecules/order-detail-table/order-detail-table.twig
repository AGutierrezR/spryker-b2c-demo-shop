{% extends molecule('order-detail-table', '@SprykerShop:CustomerPage') %}

{% block body %}
    {#<table class="table table--expand table--customer-account table--order-detail">#}
        {#<thead>#}
            {#<tr>#}
                {#{% block headerRow %}#}
                    {#<th>{{ 'customer.order.item_sku' | trans }}</th>#}
                    {#<th>{{ 'customer.order.product_name' | trans }}</th>#}
                    {#<th>{{ 'customer.order.item_price' | trans }}</th>#}
                    {#<th>{{ 'customer.order.item_quantity' | trans }}</th>#}
                    {#<th>{{ 'customer.order.item_sum' | trans }}</th>#}
                {#{% endblock %}#}
            {#</tr>#}
        {#</thead>#}
        {#<tbody>#}
            {#{% for item in data.items %}#}
                {#{% set isBundle = item.bundleItems is defined %}#}
                {#{% set concreteItem = item.bundleProduct | default(item) %}#}
                {#<tr class="table__tr table__tr--with-border">#}
                    {#{% block row %}#}
                        {#<td>#}
                            {#{{ concreteItem.sku }}#}
                        {#</td>#}
                        {#<td>#}
                            {#{{ concreteItem.name }}#}
                        {#</td>#}
                        {#<td>#}
                            {#{{ concreteItem.sumPrice | money(true, data.currencyIsoCode) }}#}
                        {#</td>#}
                        {#<td>#}
                            {#{{ concreteItem.quantity }}#}
                        {#</td>#}
                        {#<td>#}
                            {#{{ concreteItem.sumPriceToPayAggregation | money(true, data.currencyIsoCode) }}#}
                        {#</td>#}
                    {#{% endblock %}#}
                {#</tr>#}

                {#{% if isBundle %}#}
                    {#<tr>#}
                        {#{% block bundleDetailRow %}#}
                            {#<td></td>#}
                            {#<td colspan="4">#}
                                {#{{ "customer.order.bundled_items" | trans }} <br>#}
                                {#{% for bundledItem in item.bundleItems %}#}
                                    {#- {{ bundledItem.quantity }} x {{ bundledItem.name }} <br>#}
                                {#{% endfor %}#}

                                {#{% if concreteItem.productOptions is not empty %}#}
                                    {#{{ "customer.order.options" | trans }} <br>#}
                                    {#{% for productOption in concreteItem.productOptions %}#}
                                        {#&nbsp; - {{ productOption.value | trans }} {{ productOption.sumPrice | money(true, data.currencyIsoCode) }}  <br>#}
                                    {#{% endfor %}#}
                                {#{% endif %}#}
                            {#</td>#}
                        {#{% endblock %}#}
                    {#</tr>#}
                {#{% else %}#}
                    {#{% if concreteItem.productOptions is not empty %}#}
                        {#{% for productOption in concreteItem.productOptions %}#}
                            {#<tr>#}
                                {#{% block detailRow %}#}
                                    {#<td></td>#}
                                    {#<td>#}
                                        {#<small>{{ productOption.value | trans }}</small>#}
                                    {#</td>#}
                                    {#<td>#}
                                        {#<small>{{ productOption.sumPrice | money(true, data.currencyIsoCode) }}</small>#}
                                    {#</td>#}
                                    {#<td colspan="2"></td>#}
                                {#{% endblock %}#}
                            {#</tr>#}
                        {#{% endfor %}#}
                    {#{% endif %}#}
                {#{% endif %}#}
            {#{% endfor %}#}
        {#</tbody>#}
    {#</table>#}

    {% set isGiftCardExists = null %}

    {% for shipmentGroup in data.shipmentGroups %}
        <article class="order-detail-block grid">
            <div class="col col--sm-12 col--xl-8">
                <h3 class="title title--secondary-box">
                    {{ 'page.checkout.shipment.shipment_group_heading' | trans({
                        '%current%': loop.index,
                        '%total%': loop.length
                    }) }}
                </h3>

                {% for item in shipmentGroup.items %}
                    {% set isGiftCardExists = item.giftCardMetadata is not null and item.giftCardMetadata.isGiftCard %}
                    {% set item = item.bundleProduct ?? item %}

                    {% embed molecule('product-item') with {
                        modifiers: ['expand', 'secondary', 'alternative', 'right-indent-from-tablet'],
                        data: {
                            productItem: item,
                            canEditCart: false,
                            additionalContainerClass: '',
                            productOptionsModifiers: ['alternative'],
                        },
                        embed: {
                            order: data.order,
                        },
                    } only %}
                        {% block image %}
                            {% if embed.order is not empty %}
                                <span class="{{ config.name }}__checkbox">
                                    {% widget 'CustomerReorderItemCheckboxWidget' args [data.productItem] only %}{% endwidget %}
                                </span>
                            {% endif %}

                            <div class="{{ component.renderClass(config.name ~ '__image', modifiers) }} col">
                                {% include molecule('product-image') with {
                                    modifiers: ['no-side-indent'],
                                    data: {
                                        name: data.productItem.name,
                                        image: data.productItem.metadata.image,
                                    },
                                } only %}
                            </div>
                        {% endblock %}

                        {% block title %}
                            <div class="{{ component.renderClass(config.name ~ '__title', modifiers) }} col col--sm-12 col--lg-8">
                                {{ data.productItem.name }}
                            </div>
                        {% endblock %}

                        {% block options %}
                            {% if data.productItem.concreteAttributes is not empty %}
                                <ul>
                                    {% for key, item in data.productItem.concreteAttributes %}
                                        <li>{{ ('product.attribute.' ~ key) | trans }}: {{ item }}</li>
                                    {% endfor %}
                                </ul>
                            {% endif %}
                        {% endblock %}

                        {% block bundles %}{% endblock %}
                    {% endembed %}
                {% endfor %}
            </div>

            <div class="col col--sm-12 col--xl-4">
                {% include molecule('summary-sidebar', 'CheckoutPage') ignore missing with {
                    data: {
                        shipment: shipmentGroup.shipment,
                        isGiftCardExists: isGiftCardExists,
                    },
                } only %}
            </div>
        </article>
    {% endfor %}
{% endblock %}
