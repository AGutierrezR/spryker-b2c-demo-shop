{% extends model('component') %}

{% define config = {
    name: 'sort'
} %}

{% define data = {
    pagination: _view.pagination,

} %}

{% block body %}
    <div class="grid grid--justify grid--middle">
        <div class="{{ config.name }}__results col">
            {{- data.pagination.numFound }} {{ 'catalog.itemsFound' | trans -}}
        </div>

        <div class="col col--lg-8 col--xl-6 is-hidden-sm-md">
            <div class="grid grid--middle">
                {% block selects %}
                    <div class="col col--sm-3 col--md-5 {{config.jsName}}__filter" data-block-to="js-filter-section__sorting" data-breakpoint="769">
                        {% block label %}
                            <label class="{{ config.name }}__label is-hidden-sm-md">{{ 'catalog.filter.per' | trans }}:</label>
                        {% endblock %}
                        {% embed molecule('custom-select') with {
                            modifiers: ['hollow'],
                            attributes: {
                                name: 'ipp',
                                'config-theme': 'secondary',
                            },
                            embed: {
                                pagination: data.pagination,
                                jsClass: config.jsName ~ '__select-trigger',
                            },
                        } only %}
                            {% block selectClass -%}
                                {{ parent() }} {{ embed.jsClass }}
                            {%- endblock %}
                            {% block options %}
                                {% for limit in embed.pagination.config.validItemsPerPageOptions %}
                                    <option value="{{ limit }}" {% if limit == embed.pagination.currentItemsPerPage %}selected{% endif %}>{{ limit }}</option>
                                {% endfor %}
                            {% endblock %}
                        {% endembed %}
                    </div>
                    <div class="col col--sm-9 col--md-7 {{config.jsName}}__filter" data-block-to="js-filter-section__sorting" data-breakpoint="769">
                        {% embed molecule('custom-select') with {
                            class: 'float-right',
                            modifiers: ['hollow'],
                            attributes: {
                                name: 'sort',
                                'config-theme': 'secondary',
                                'config-width': '100%'
                            },
                            embed: {
                                sort: _view.sort,
                                jsClass: config.jsName ~ '__select-trigger'
                            }
                        } only %}
                            {% block selectClass -%}
                                {{ parent() }} {{ embed.jsClass }}
                            {%- endblock %}
                            {% block options %}
                                <option value="">
                                    {{ 'catalog.sort.relevance' | trans }}
                                </option>

                                {% for sortParamName in embed.sort.sortParamNames %}
                                    {% set isSelected = sortParamName == embed.sort.currentSortParam %}
                                    <option
                                        value="{{ sortParamName }}"
                                        {% if isSelected %}selected{% endif %}
                                    >
                                        {{ ('catalog.sort.' ~ sortParamName) | trans }}
                                    </option>
                                {% endfor %}
                            {% endblock %}
                        {% endembed %}
                    </div>
                {% endblock %}
            </div>
        </div>
    </div>

    {% include molecule('breakpoint-dependent-block-placer') with {
        attributes: {
            'block-class-name': config.jsName ~ '__filter',
        },
    } only %}

    {% include molecule('form-submitter') with {
        attributes: {
            'trigger-class-name': config.jsName ~ '__select-trigger',
        },
    } only %}
{% endblock %}
