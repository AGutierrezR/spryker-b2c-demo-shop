{% extends model('component') %}

{% define config = {
    name: 'sort'
} %}

{% block body %}
    <div class="grid grid--justify">

        <div class="{{ config.name }}__col col">
            <div class="{{ config.name }}__results">
                {{- _view.pagination.numFound }} {{ 'catalog.itemsFound' | trans -}}
            </div>

            <div class="{{ config.name }}__trigger-filter js-filter-toggle-selector">
                {{- 'catalog.filter.filter' | trans -}}

                <div class="{{ config.name }}__caret">
                    {%- include atom('icon') with {
                        modifiers: ['inherit'],
                        data: {
                            name: 'arrow-down'
                        }
                    } only -%}
                </div>
            </div>
        </div>

        <div class="{{ config.name }}__col col">
            {% embed atom('custom-select') with {
                modifiers: ['sort', 'naked'],
                attributes: {
                    name: 'sort',
                    onchange: 'this.form.submit();'
                },
                embed: {
                    sort: _view.sort
                }
            } only %}
                {% block options %}
                    <option value="">
                        {{ 'catalog.sort.relevance' | trans }}
                    </option>

                    {% for sortParamName in embed.sort.sortParamNames %}
                        {% set isSelected = sortParamName == embed.sort.currentSortParam %}
                        <option
                            value="{{ sortParamName }}"
                            {% if isSelected %}selected{% endif %}
                        >
                            {{ ('catalog.sort.' ~ sortParamName) | trans }}
                        </option>
                    {% endfor %}
                {% endblock %}
            {% endembed %}
        </div>

    </div>
{% endblock %}
