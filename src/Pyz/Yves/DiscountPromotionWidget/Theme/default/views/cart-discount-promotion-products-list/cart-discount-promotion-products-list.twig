{% extends template('widget') %}

{% define config = {
    name: 'promotion-block'
} %}

{% define data = {
    promotionProducts: _widget.promotionProducts
} %}

{% block body %}
    {% if data.promotionProducts is not empty %}
        <div class="{{ config.name }} shopping-cart__box">
            <h4 class="{{ config.name }}__title">{{ 'cart.promotion.items' | trans }}</h4>
        </div>
        {% for product in data.promotionProducts %}
            {% embed molecule('promotion-item', 'CartPage') with {
                data: {
                    name: product.name,
                    abstractId: product.idProductAbstract,
                    url: product.url,
                    imageUrl: (product.images|length ? product.images.0.externalUrlSmall : ''),
                    price: product.prices.DEFAULT,
                    originalPrice: (product.prices.ORIGINAL is defined ? product.prices.ORIGINAL : null)
                },
                embed: {
                    superAttributes: product.attributeMap.superAttributes,
                    selectedAttributes: product.selectedAttributes,
                    availableAttributes: product.availableAttributes,
                    sku: product.sku,
                    idProductAbstract: product.idProductAbstract,
                    idProductConcrete: product.idProductConcrete,
                    promotionDiscount: {
                        id: product.promotionItem.discount.discountPromotion.idDiscountPromotion,
                        maxQuantity: product.promotionItem.maxQuantity
                    }
                }
            } only %}
                {% block content %}
                    {{parent()}}
                    <div class="grid">
                        {% include molecule('variant-configurator', 'DiscountPromotionWidget') with {
                            class: 'col col--lg-9 col--sm-12',
                            data: {
                                idProductAbstract: embed.idProductAbstract,
                                superAttributes: embed.superAttributes,
                                selectedAttributes: embed.selectedAttributes,
                                availableAttributes: embed.availableAttributes
                            }
                        } only %}
                    </div>
                {% endblock %}

                {% block actions %}
                    {% set disabled = embed.idProductConcrete is empty %}

                    <form method="POST" action="/cart/add/{{ embed.sku }}" class="grid grid--bottom grid--justify">
                        <div class="col">
                            {% include molecule('cart-item-quantity-input', 'CartPage') with {
                                data: {
                                    maxQuantity: embed.promotionDiscount.maxQuantity,
                                    hasUpdateButton: false
                                }
                            } only %}
                        </div>

                        <div class="col">
                            <input type="hidden" value="{{ embed.sku }}" name="groupKey">
                            <input type="hidden" value="{{ embed.promotionDiscount.id }}" name="idDiscountPromotion">

                            <button type="submit" class="button button--white {{ config.name }}__button" {{ disabled ? 'disabled' : '' }} onclick="this.form.submit(); this.disabled='disabled'; return false;">
                                {{ 'page.detail.add-to-cart' | trans }}
                            </button>
                        </div>
                    </form>
                {% endblock %}
            {% endembed %}
        {% endfor %}
    {% endif %}
{% endblock %}
