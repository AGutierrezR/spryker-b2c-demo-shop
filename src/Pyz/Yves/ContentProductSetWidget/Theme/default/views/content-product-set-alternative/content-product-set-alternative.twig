{% extends template('widget') %}

{% define data = {
    productViews: productViews,
    productSet: productSet,
} %}

{% block body %}
    {% embed organism('product-set-cms-content', 'ProductSetWidget') ignore missing with {
        data: {
            products: data.productViews,
            name: data.productSet.name,
            description: data.productSet.description,
            images: data.productSet.imageSets.0.images | default([]),
        },
    } only %}
        {% block body %}
            {% block header %}
                {% block title %}
                    {% include molecule('product-slider-title') with {
                        modifiers: ['set'],
                        data: {
                            title: data.name,
                        },
                    } only %}
                {% endblock %}

                {% block description %}
                    {% if data.description %}
                        <p>{{ data.description }}</p>
                    {% endif %}
                {% endblock %}
            {% endblock %}

            <div class="grid grid--stretch">
                <div class="col col--sm-12 col--lg-5 product-set-slider product-set-slider--single">
                    {% block carousel %}
                        {% embed molecule('slick-carousel') with {
                            data: {
                                slides: data.images,
                            },
                            attributes: {
                                'data-json': '{
                                            "slidesToShow": 1,
                                            "dots": true,
                                            "arrows": false
                                        }'
                            },
                            modifiers: ['product-set'],
                        } only %}

                            {% block slides %}
                                {% for slide in data.slides %}
                                    {% include atom('thumbnail') with {
                                        modifiers: ['bigger', 'no-margin', 'product-set'],
                                        attributes: {
                                            itemprop: 'image',
                                            src: slide.externalUrlLarge,
                                        },
                                    } only %}
                                {% endfor %}
                            {% endblock %}
                        {% endembed %}
                    {% endblock %}
                </div>
                <div class="col col--sm-12 col--lg-7 product-set-slider product-set-slider--hide-prev-btn product-set-slider--multiple">
                    {% block productSet %}
                        <form method="GET">
                            {% embed molecule('slick-carousel') with {
                                data: {
                                    slides: data.products,
                                },
                                attributes: {
                                    'data-json': data.sliderConfig,
                                    'custom-select-selector': '.custom-select',
                                },
                                modifiers: ['product-set', 'product-set-secondary'],
                            } only %}

                                {% block slides %}
                                    {% for product in data.slides %}
                                        {% embed molecule('product-card') with {
                                            modifiers: ['stretch', 'product-set', 'widget'],
                                            data: {
                                                name: product.name,
                                                abstractId: product.idProductAbstract,
                                                url: product.url,
                                                imageUrl: product.images.0.externalUrlSmall | default,
                                                price: product.price,
                                                originalPrice: product.prices['ORIGINAL'] | default,
                                            },
                                            embed: {
                                                product: product,
                                            },
                                        } only %}
                                            {% block content %}
                                                {{parent()}}
                                                {% set isNotAvailable = embed.product.idProductConcrete and not embed.product.available %}

                                                {% embed molecule('variant-configurator', 'ProductDetailPage') with {
                                                    data: {
                                                        superAttributes: embed.product.attributeMap.superAttributes,
                                                        selectedAttributes: embed.product.selectedAttributes,
                                                        availableAttributes: embed.product.availableAttributes,
                                                        useExternalForm: true,
                                                    },
                                                    embed: embed,
                                                } only %}
                                                    {% block variant %}
                                                        {% include molecule('variant', 'ProductDetailPage') with {
                                                            data: {
                                                                name: name,
                                                                formName: 'attributes[' ~ embed.product.idProductAbstract ~ '][' ~ name ~ ']',
                                                                values: values,
                                                                selectedValue: selectedValue,
                                                                label: ('product.attribute.' ~ name) | trans,
                                                                isAvailable: isAvailable,
                                                                autoInitSelect: true,
                                                            },
                                                        } only %}
                                                    {% endblock %}
                                                {% endembed %}
                                            {% endblock %}
                                        {% endembed %}
                                    {% endfor %}
                                {% endblock %}
                            {% endembed %}
                        </form>
                        {% include molecule('action-single-click-enforcer') with {
                            attributes: {
                                'target-selector': '.js-product-set__add-to-cart',
                            },
                        } only %}
                    {% endblock %}
                </div>
            </div>

            <div class="grid grid--center">
                <div class="col col--md-6">
                    <form method="POST" action="{{ path('cart/add-items') }}">
                        {% set isDisabled = false %}

                        {% for product in data.products %}
                            {% if product.idProductConcrete is not empty %}
                                {% if product.available %}
                                    <input type="hidden" name="items[{{ loop.index }}][sku]" value="{{ product.sku }}">
                                    <input type="hidden" name="items[{{ loop.index }}][quantity]" value="1">
                                {% endif %}
                            {% else %}
                                {% set isDisabled = true %}
                            {% endif %}
                        {% endfor %}

                        <button type="submit" class="button button--expand" data-init-single-click {% if isDisabled %}disabled{% endif %}>
                            {{ 'product.set.detail.add-all-to-cart' | trans }}
                        </button>
                    </form>
                </div>
            </div>
            <hr>
        {% endblock %}
    {% endembed %}
{% endblock %}
