{% extends model('component') %}

{% define config = {
    name: 'product-configurator',
    tag: 'section'
} %}

{% define data = {
    product: required,
    maxQuantity: 10,
    isBundle: null,
    bundleItems: []
} %}

{% set options = [] %}
{% set productName = data.product.name | default %}
{% set sku = data.product.sku %}
{% set availabilityWidget = '' %}
{% set isDisabled = data.product.idProductConcrete is empty or data.product.price is empty %}

{% for index in 1..data.maxQuantity %}
    {% set options = options | merge([{
        label: index,
        value: index
    }]) %}
{% endfor %}

{% if widgetExists('AvailabilityWidgetPlugin') %}
    {% set isAvailable = widgetBlock('AvailabilityWidgetPlugin', 'isAvailable', data.product) %}
    {% set isDisabled = not isAvailable or isDisabled %}
{% endif %}

{% block body %}

    <h1 class="product-name">{{productName}}</h1>

    <div class="grid grid--justify pdp-price-review">
        {{ widgetBlock('ProductReviewWidgetPlugin', 'rating', data.product.idProductAbstract) }}
        <div class="col product-details__price">
            {{ widget('PriceWidgetPlugin', data.product) }}
        </div>
    </div>

    {% if data.isBundle != null %}
        <div class="pdp-option">
            <div class="pdp-option__title js-toggle-pdp-options active" data-toggle-target=".js-pdp-option-bundle">{{ 'bundle.title' | trans }}</div>
            <div class="pdp-option__wrapper bundle-list-options__wrap js-pdp-option-bundle">
                <ul class="grid bundle-list-options">
                    {% for item in data.bundleItems %}
                        <li class="col col--sm-6 bundle-list-options__item">
                            {{ item.name }}
                            <span class="bundle-list-options__quantity bundle-quantity"> Â·&nbsp; {{ item.quantity }}x</span>
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
    {% endif %}

    {{ widget('ProductGroupWidgetPlugin', data.product.idProductAbstract) }}

    {% include molecule('variant-configurator', 'ProductDetailPage') with {
        data: {
            superAttributes: data.product.attributeMap.superAttributes,
            selectedAttributes: data.product.selectedAttributes,
            availableAttributes: data.product.availableAttributes
        }
    } only %}

    <form method="POST" action="{{ path("cart/add", {"sku": sku}) }}">
        {{ widget('ProductOptionWidgetPlugin', data.product) }}

        {% if widgetExists('ProductMeasurementUnitWidgetPlugin') %}
            {{ widget('ProductMeasurementUnitWidgetPlugin', data.product, isDisabled, options) }}
        {% else %}

            {% if not isDisabled %}
                <div class="pdp-option">
                    <div class="pdp-option__title">{{'cart.item_quantity' | trans}}</div>
                    <div class="pdp-option__wrapper">
                        {% include molecule('quantity-counter') with {
                            modifiers: ['quantity-large'],
                            data: {
                                readOnly: true
                            }
                        } only %}
                    </div>
                </div>
            {% endif %}

            {% if not isAvailable %}
                {{ widget('AvailabilityWidgetPlugin', data.product) }}
            {% endif %}

            <div class="add-to-cart">
                <button type="submit" class="button  button--expand {{ config.jsName ~ '__button' }}" {{ isDisabled ? 'disabled' : '' }} {{qa('add-to-cart-button')}}>
                    {{ 'page.detail.add-to-cart' | trans }}
                </button>
                {% include molecule('action-single-click-enforcer') with {
                    attributes: {
                        'target-selector': '.' ~ config.jsName ~ '__button'
                    }
                } only %}
            </div>
        {% endif %}
    </form>

    {% if widgetExists('WishlistWidgetPlugin') %}
        {{ widget('WishlistWidgetPlugin', data.product) }}
    {% endif %}
{% endblock %}
