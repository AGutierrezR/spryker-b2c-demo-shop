{% extends model('component') %}

{% define config = {
    name: 'product-configurator',
    tag: 'section'
} %}

{% define data = {
    product: required,
    maxQuantity: 10,
    isBundle: null,
    bundleItems: []
} %}

{% set options = [] %}
{% set productName = data.product.name | default %}
{% set sku = data.product.sku %}
{% set availabilityWidget = '' %}
{% set isDisabled = data.product.idProductConcrete is empty or data.product.price is empty %}

{% for index in 1..data.maxQuantity %}
    {% set options = options | merge([{
        label: index,
        value: index
    }]) %}
{% endfor %}

{% if widgetExists('AvailabilityWidgetPlugin') %}
    {% set isAvailable = widgetBlock('AvailabilityWidgetPlugin', 'isAvailable', data.product) %}
    {% set isDisabled = not isAvailable or isDisabled %}
{% endif %}

{% block body %}

    <h1 class="title title--product">{{productName}}</h1>

    <div class="grid grid--justify spacing-bottom spacing-bottom--bigger">
        {{ widgetBlock('ProductReviewWidgetPlugin', 'rating', data.product.idProductAbstract) }}
        <div class="col text-right">
            {% include molecule('price') with {
                modifiers: ['pdp'],
                data: {
                    amount: data.product.price | money,
                    originalAmount: data.product.prices.ORIGINAL is not defined ? null : data.product.prices.ORIGINAL | money
                }
            } only %}
        </div>
    </div>

    {% if data.isBundle != null %}
        {% embed molecule('toggler-item') with {
            modifiers: ['with-top-border', 'option'],
            data: {
                title: 'bundle.title' | trans,
                triggerClass: config.jsName ~ '__trigger-bundle',
                targetClass: config.jsName ~ '__target-bundle',
                isActive: true,
            },
            embed: {
                bundleItems: data.bundleItems,
            }
        } only %}
            {% block contentText %}
                {% include molecule('bundle-option-list', 'ProductDetailPage') with {
                    data: {
                        bundleItems: embed.bundleItems,
                    }
                } only %}
            {% endblock %}
        {% endembed %}
        {% include molecule('toggler-accordeon') with {
            attributes: {
                trigger: '.' ~ config.jsName ~ '__trigger-bundle'
            }
        } only %}
    {% endif %}

    {{ widget('ProductGroupWidgetPlugin', data.product.idProductAbstract) }}

    {% include molecule('variant-configurator', 'ProductDetailPage') with {
        data: {
            superAttributes: data.product.attributeMap.superAttributes,
            selectedAttributes: data.product.selectedAttributes,
            availableAttributes: data.product.availableAttributes
        }
    } only %}

    <form method="POST" action="{{ path("cart/add", {"sku": sku}) }}">
        {{ widget('ProductOptionWidgetPlugin', data.product) }}

        {% if widgetExists('ProductMeasurementUnitWidgetPlugin') %}
            {{ widget('ProductMeasurementUnitWidgetPlugin', data.product, isDisabled, options) }}
        {% else %}

            {% if not isDisabled %}
                {% embed molecule('toggler-item') with {
                    modifiers: ['with-top-border', 'option'],
                    data: {
                        title: 'cart.item_quantity' | trans,
                        isToggler: false,
                    }
                } only %}
                    {% block contentText %}
                        {% include molecule('quantity-counter') with {
                            modifiers: ['quantity-large', 'no-spacing'],
                            data: {
                                readOnly: true
                            }
                        } only %}
                    {% endblock %}
                {% endembed %}
            {% endif %}

            {% if not isAvailable %}
                {{ widget('AvailabilityWidgetPlugin', data.product) }}
            {% endif %}

            <div class="{{ config.name }}__button-wrap">
                <button type="submit" class="button button--large button--expand {{ config.jsName ~ '__button' }}" {{ isDisabled ? 'disabled' : '' }} {{qa('add-to-cart-button')}}>
                    {{ 'page.detail.add-to-cart' | trans }}
                </button>
                {% include molecule('action-single-click-enforcer') with {
                    attributes: {
                        'target-selector': '.' ~ config.jsName ~ '__button'
                    }
                } only %}
            </div>
        {% endif %}
    </form>

    {% if widgetExists('WishlistWidgetPlugin') %}
        {{ widget('WishlistWidgetPlugin', data.product) }}
    {% endif %}
{% endblock %}
