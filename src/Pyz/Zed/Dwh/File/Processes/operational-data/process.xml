<?xml version="1.0" encoding="UTF-8"?>
<process xmlns="http://project-a.com/dwh-process"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://project-a.com/dwh-process ../../../../../../../../vendor/project-a/dwh-package/component/Dwh/process.xsd"
         id="operational-data"
         description="Tranforms the operational data (mainly from the Zed db) into the various cubes related to sales, products, etc.">

    <initial-job id="initialize-schemas">
        <description>Recreates the structure of the dim schema</description>
        <commands>
            <run-sql-file file-name="utils.sql" echo-queries="false"/>
            <run-sql-file file-name="recreate-schemas.sql" echo-queries="true"/>
            <write-config/>
        </commands>
    </initial-job>

    <job id="copy-country">
        <description>Copies the country table into the dim schema</description>

        <commands>
            <run-sql-file file-name="orders/create-country-dim-table.sql" echo-queries="false"/>
            <load-from-mysql mysql-database="zed" file-name="orders/load-country.sql" target-table="dim_next.country"/>

        </commands>
    </job>


    <job id="load-artwork">
        <description>Loads artworks from the legacy db into a tmp table</description>
        <commands>
            <run-sql-file file-name="artwork/create-artwork-tmp-table.sql" echo-queries="false"/>
            <load-from-mysql file-name="artwork/load-artwork.sql" target-table="tmp.artwork"
                             mysql-database="legacy" timezone="UTC"/>
        </commands>
    </job>

    <job id="transform-artwork">
        <description>Creates the artwork dimension table</description>
        <dependencies>
            <dependency job="load-artwork"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="artwork/transform-artwork.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="index-artwork">
        <description>Adds indexes and foreign key constraints to dim.artwork</description>
        <dependencies>
            <dependency job="transform-artwork"/>
            <dependency job="index-user"/>
        </dependencies>
        <commands>
            <execute-sql>SELECT tmp.index_dim_artwork();</execute-sql>
        </commands>
    </job>

    <job id="load-order">
        <description>Loads orders into the tmp schema</description>
        <commands>
            <run-sql-file file-name="orders/create-order-tmp-table.sql" echo-queries="false"/>
            <load-from-mysql file-name="orders/load-order.sql" target-table="tmp.order"
                             mysql-database="zed" timezone="UTC"/>
            <execute-sql>SELECT tmp.index_tmp_order();</execute-sql>
        </commands>
    </job>

    <job id="load-order-item">
        <description>Loads order items into the tmp schema</description>
        <commands>
            <run-sql-file file-name="orders/create-order-item-tmp-table.sql" echo-queries="false"/>
            <load-from-mysql file-name="orders/load-order-item.sql" target-table="tmp.order_item" mysql-database="zed"/>
            <execute-sql>SELECT tmp.index_tmp_order_item();</execute-sql>
        </commands>
    </job>

    <job id="load-order-item-option">
        <description>Loads order item options into the tmp schema</description>
        <commands>
            <run-sql-file file-name="orders/create-order-item-option-tmp-table.sql" echo-queries="false"/>
            <load-from-mysql file-name="orders/load-order-item-option.sql" target-table="tmp.order_item_option"
                             mysql-database="zed"/>
            <execute-sql>SELECT tmp.index_tmp_order_item_option();</execute-sql>
        </commands>
    </job>

    <job id="load-sales-expense">
        <description>Loads the sales expense table into the tmp schema</description>
        <commands>
            <run-sql-file file-name="orders/create-sales-expense-tmp-table.sql" echo-queries="false"/>
            <load-from-mysql file-name="orders/load-sales-expense.sql" target-table="tmp.sales_expense"
                             mysql-database="zed"/>
        </commands>
    </job>


    <job id="copy-voucher">
        <description>Loads vouchers into the dim schema</description>
        <commands>
            <run-sql-file file-name="vouchers/create-voucher-dim-table.sql" echo-queries="false"/>
            <load-from-mysql file-name="vouchers/copy-voucher.sql" target-table="dim_next.voucher"
                             mysql-database="zed"/>
        </commands>
    </job>

    <job id="load-voucher-usage">
        <description>Loads the usage of vouchers per order into a tmp table</description>
        <commands>
            <run-sql-file file-name="vouchers/create-voucher-usage-tmp-table.sql" echo-queries="false"/>
            <load-from-mysql file-name="vouchers/load-voucher-usage.sql" target-table="tmp.voucher_usage"
                             mysql-database="zed"/>
        </commands>
    </job>

    <!-- Users -->
    <job id="load-user">
        <description>'Invents' customers from orders and loads them into the tmp schema</description>
        <commands>
            <run-sql-file file-name="users/create-user-tmp-table.sql" echo-queries="false"/>
            <load-from-mysql mysql-database="legacy" file-name="users/load-user.sql"
                             target-table="tmp.user"/>
            <execute-sql>SELECT tmp.index_tmp_user();</execute-sql>
        </commands>
    </job>
    <job id="cleanse-user">
        <description>Cleanse the user table by adding missing created_at timestamps</description>
        <dependencies>
            <dependency job="load-user"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="users/cleanse-user.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="transform-user">
        <description>Fills the user table of the dim schema</description>
        <dependencies>
            <dependency job="cleanse-user"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="users/transform-user.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="index-user">
        <description>Adds indexes and foreign key constraints to the dim.user table</description>
        <dependencies>
            <dependency job="transform-user"/>
        </dependencies>
        <commands>
            <execute-sql>SELECT tmp.index_dim_user();</execute-sql>
        </commands>
    </job>

    <job id="load-product">
        <description>Loads product basic information into the tmp.product table</description>
        <commands>
            <run-sql-file file-name="products/create-product-tmp-table.sql" echo-queries="false"/>
            <load-from-mysql mysql-database="zed" file-name="products/load-product.sql"
                             target-table="tmp.product"/>
            <execute-sql>SELECT tmp.index_tmp_product();</execute-sql>
        </commands>
    </job>

    <job id="transform-product-category">
        <description>Creates the product category dimension table</description>
        <dependencies>
            <dependency job="load-product"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="products/transform-product-category.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="transform-product">
        <description>Creates the product dimension table</description>
        <dependencies>
            <dependency job="transform-product-category"/>
            <dependency job="transform-substrate"/>
            <dependency job="load-artwork"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="products/transform-product.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="index-product">
        <description>Adds indexes and foreign key constraints to dim.product</description>
        <dependencies>
            <dependency job="transform-product"/>
            <dependency job="index-artwork"/>
        </dependencies>
        <commands>
            <execute-sql>SELECT tmp.index_dim_product();</execute-sql>
        </commands>
    </job>

    <job id="transform-substrate">
        <description>Creates the product substrate dimension table</description>
        <dependencies>
            <dependency job="load-product"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="products/transform-substrate.sql" echo-queries="false"/>
        </commands>
    </job>


    <!-- sales events -->
    <job id="load-item-status-history">
        <description>Copies the order item status history into the tmp schema</description>
        <commands>
            <run-sql-file file-name="sales-events/create-item-status-history-tmp-table.sql" echo-queries="false"/>
            <load-from-mysql mysql-database="zed" file-name="sales-events/load-item-status-history.sql"
                             target-table="tmp.order_item_status_history"/>
            <execute-sql>SELECT tmp.index_tmp_order_item_status_history();</execute-sql>
        </commands>
    </job>

    <job id="partition-item-status-history">
        <description>Partitions the order item history into events, per status perspective</description>
        <dependencies>
            <dependency job="load-item-status-history"/>
            <dependency job="cleanse-orders"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="sales-events/partition-item-status-history.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="transform-sales-event">
        <description>Fills the dim.sales_event table</description>
        <dependencies>
            <dependency job="partition-item-status-history"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="sales-events/transform-sales-event.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="transform-sales-event-date">
        <description>Fills the dim.sales_event_date table</description>
        <dependencies>
            <dependency job="partition-item-status-history"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="sales-events/transform-sales-event-date.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="transform-sales-event-duration">
        <description>Fills the dim.sales_event_duration table</description>
        <dependencies>
            <dependency job="partition-item-status-history"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="sales-events/transform-sales-event-duration.sql" echo-queries="true"/>
        </commands>
    </job>


    <job id="index-sales-event">
        <description>Adds indexes and foreign key constraints to the dim.sales_event table</description>
        <dependencies>
            <dependency job="transform-sales-event"/>
            <dependency job="index-order-item"/>
        </dependencies>
        <commands>
            <execute-sql>SELECT tmp.index_dim_sales_event();</execute-sql>
        </commands>
    </job>

    <job id="index-sales-event-date">
        <description>Adds indexes and foreign key constraints to the dim.sales_event_date table</description>
        <dependencies>
            <dependency job="transform-sales-event-date"/>
            <dependency job="index-sales-event"/>
        </dependencies>
        <commands>
            <execute-sql>SELECT tmp.index_dim_sales_event_date();</execute-sql>
        </commands>
    </job>

    <job id="index-sales-event-duration">
        <description>Adds indexes and foreign key constraints to the dim.sales_event_duration table</description>
        <dependencies>
            <dependency job="transform-sales-event-duration"/>
            <dependency job="index-sales-event"/>
        </dependencies>
        <commands>
            <execute-sql>SELECT tmp.index_dim_sales_event_duration();</execute-sql>
        </commands>
    </job>


    <job id="flatten-sales-event-fact">
        <description>Creates a single flat fact table for the sales events cube</description>
        <dependencies>
            <dependency job="index-sales-event"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="sales-events/flatten-sales-event-fact.sql" echo-queries="true"/>
        </commands>
    </job>

    <parallel-job id="index-sales-event-fact">
        <description>Adds indexes to all foreign keys of the sales_event_fact table</description>
        <dependencies>
            <dependency job="flatten-sales-event-fact"/>
        </dependencies>
        <worker-function echo-queries="true" name="util.add_index">
            <parameter>dim_next</parameter>
            <parameter>sales_event_fact</parameter>
            <query-for-last-parameter>SELECT util.get_columns('dim_next','sales_event_fact','%_fk');
            </query-for-last-parameter>
        </worker-function>
    </parallel-job>


    <job id="load-payment">
        <description>Loads payment methods and providers per order into the tmp schema</description>
        <commands>
            <run-sql-file file-name="payment/create-payment-tmp-table.sql" echo-queries="false"/>

            <load-from-mysql file-name="payment/load-payment.sql" target-table="tmp.payment" mysql-database="zed"/>
        </commands>
    </job>

    <job id="transform-payment-method">
        <description>Fills the payment method dimension table</description>
        <dependencies>
            <dependency job="load-payment"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="payment/transform-payment-method.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="transform-payment-provider">
        <description>Fills the payment provider dimension table</description>
        <dependencies>
            <dependency job="load-payment"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="payment/transform-payment-provider.sql" echo-queries="true"/>
        </commands>
    </job>


    <job id="cleanse-orders">
        <description>Removes test orders and orphan items/ orders</description>
        <dependencies>
            <dependency job="load-order"/>
            <dependency job="load-order-item"/>
            <dependency job="transform-item-status-mapping"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="orders/cleanse-orders.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="transform-order">
        <description>Transforms orders and their dimensions into dim.order</description>
        <dependencies>
            <dependency job="transform-payment-method"/>
            <dependency job="transform-payment-provider"/>
            <dependency job="cleanse-orders"/>
            <dependency job="copy-voucher"/>
            <dependency job="load-voucher-usage"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="orders/transform-order.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="create-price-range-table">
        <description>Creates the table for price ranges</description>
        <commands>
            <run-sql-file file-name="orders/create-price-range-table.sql" echo-queries="true"/>
        </commands>
    </job>


    <job id="load-discount">
        <description>Loads sales discount amount information into a tmp table</description>
        <commands>
            <run-sql-file file-name="vouchers/create-discount-tmp-table.sql" echo-queries="true"/>
            <load-from-mysql mysql-database="zed" file-name="vouchers/load-discount.sql"
                             target-table="tmp.discount"/>
        </commands>
    </job>

    <job id="load-order-process">
        <description>Loads process ids and type into tmp.order-process table</description>
        <commands>
            <run-sql-file file-name="orders/create-order-process-tmp-table.sql" echo-queries="true"/>
            <load-from-mysql mysql-database="zed" file-name="orders/load-order-process.sql"
                             target-table="tmp.order_process"/>
        </commands>
    </job>

    <job id="transform-order-process">
        <description>Transforms order process containing checkout and fulfillment types into dim_next.order_process table</description>
        <dependencies>
            <dependency job="load-order-process"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="orders/transform-order-process.sql" echo-queries="true"/>
        </commands>
    </job>


    <job id="transform-order-item">
        <description>Transforms order items and their dimensions into dim.order</description>
        <dependencies>
            <dependency job="create-price-range-table"/>
            <dependency job="load-discount"/>
            <dependency job="transform-product"/>
            <dependency job="cleanse-orders"/>
            <dependency job="transform-option"/>
            <dependency job="load-sales-expense"/>
            <dependency job="load-payment"/>
            <dependency job="transform-order-process"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="orders/transform-order-item.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="transform-option">
        <description>Transforms option into dim.option</description>
        <dependencies>
            <dependency job="load-order-item-option"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="orders/transform-option.sql" echo-queries="true"/>
        </commands>
    </job>

    <job id="transform-order-date">
        <description>Transforms date perspectives of the orders into dim.order_date</description>
        <dependencies>
            <dependency job="transform-sales-event"/>
            <dependency job="transform-sales-event-date"/>
            <dependency job="index-order-item"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="orders/transform-order-date.sql" echo-queries="true"/>
        </commands>
    </job>


    <job id="index-order">
        <description>Adds indexes and foreign key constraints on the dim.order table</description>
        <dependencies>
            <dependency job="transform-order"/>
            <dependency job="index-user"/>
            <dependency job="copy-country"/>
            <dependency job="populate-time-dimensions"/>
        </dependencies>
        <commands>
            <execute-sql>SELECT tmp.index_dim_order();</execute-sql>
        </commands>
    </job>

    <job id="index-order-item">
        <description>Adds indexes and foreign key constraints on the dim.order table</description>
        <dependencies>
            <dependency job="index-order"/>
            <dependency job="index-product"/>
            <dependency job="transform-order-item"/>
        </dependencies>
        <commands>
            <execute-sql>SELECT tmp.index_dim_order_item();</execute-sql>
        </commands>
    </job>


    <!-- Time -->
    <job id="populate-time-dimensions">
        <description>Fills the date and duration dimension tables for all days from the first order on</description>
        <dependencies>
            <dependency job="cleanse-user"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="time-dimensions.sql" echo-queries="false"/>
            <execute-sql>SELECT tmp.populate_time_dimensions((SELECT min(created_at) - interval '1 day' FROM
                tmp.user)::DATE);
            </execute-sql>
        </commands>
    </job>


    <!-- Order item statuses -->
    <job id="load-order-item-status-mapping">
        <description>Loads the mapping from ZED's order item statuses to perspectives and groups into the tmp schema
        </description>
        <commands>
            <run-sql-file file-name="order-statuses/create-order-item-status-mapping-tmp-table.sql"
                          echo-queries="false"/>
            <php-command class-name="Pyz_Dwh_Model_Import_Command_LoadOrderStatusMapping"/>
        </commands>
    </job>

    <job id="copy-order-item-status">
        <description>Copies the order item status table into the dim schema</description>
        <commands>
            <run-sql-file file-name="order-statuses/create-order-item-status-table.sql" echo-queries="false"/>
            <load-from-mysql mysql-database="zed" file-name="order-statuses/copy-order-item-status.sql"
                             target-table="dim_next.order_item_status"/>
        </commands>
    </job>

    <job id="transform-item-status-mapping">
        <description>Maps item statuses to to perspectives and groups</description>
        <dependencies>
            <dependency job="load-order-item-status-mapping"/>
            <dependency job="copy-order-item-status"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="order-statuses/transform-item-status-mapping.sql" echo-queries="true"/>
        </commands>
    </job>


    <!-- Facts and aggregates -->
    <job id="flatten-sales-fact">
        <description>Creates a flattened fact table for the sales cube</description>
        <dependencies>
            <dependency job="index-order-item"/>
        </dependencies>
        <commands>
            <run-sql-file file-name="facts-and-aggregates/flatten-sales-fact.sql" echo-queries="true"/>
        </commands>
    </job>


    <final-job id="replace-dim-schema">
        <description>Replaces the current zed_history_dim schema with the next one and flushes the mondrian caches
        </description>
        <commands>
            <execute-sql>SELECT util.replace_schema('dim', 'dim_next');</execute-sql>
        </commands>
    </final-job>

    <!-- MongoDB import test -->
    <!--
        <job id="load-artwork">
            <description>Copy artwork from mongoDB to postgres</description>
            <commands>
                <load-from-mongodb file-name="artwork/load-artwork.js" target-table="tmp.artwork"/>
            </commands>
        </job>

        <job id="load-artwork-edition">
            <description>Copy artwork edition from mongoDB to postgres</description>
            <commands>
                <load-from-mongodb file-name="artwork/load-artwork-edition.js" target-table="tmp.artwork_edition"/>
            </commands>
        </job>
    -->


</process>
